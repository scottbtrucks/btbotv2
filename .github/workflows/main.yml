name: CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run linter
      run: npm run lint
      
    - name: Run type checking
      run: npm run build --if-present
      
    - name: Run tests
      run: npm test --if-present
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        AZURE_TTS_KEY: ${{ secrets.AZURE_TTS_KEY }}
        AZURE_TTS_REGION: ${{ secrets.AZURE_TTS_REGION }}
        AZURE_STT_KEY: ${{ secrets.AZURE_STT_KEY }}
        AZURE_STT_REGION: ${{ secrets.AZURE_STT_REGION }}
        USE_AZURE_SERVICES: true

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build
      run: npm run build
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        AZURE_TTS_KEY: ${{ secrets.AZURE_TTS_KEY }}
        AZURE_TTS_REGION: ${{ secrets.AZURE_TTS_REGION }}
        AZURE_STT_KEY: ${{ secrets.AZURE_STT_KEY }}
        AZURE_STT_REGION: ${{ secrets.AZURE_STT_REGION }}
        USE_AZURE_SERVICES: true
        
    - name: Deploy to Vercel
      uses: amondnet/vercel-action@v20
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
        vercel-args: '--prod'